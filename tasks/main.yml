---
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Ensure munin-node is installed (RedHat).
  yum: name=munin-node state=installed enablerepo=epel
  when: ansible_os_family == 'RedHat'

- name: Ensure munin-node is installed (Debian).
  apt: name=munin-node state=installed
  when: ansible_os_family == 'Debian'

- name: Ensure munin-node is installed (FreeBSD).
  package: name=munin-node state=present
  when: ansible_os_family == 'FreeBSD'

- name: Copy munin-node configuration.
  template:
    src: munin-node.conf.j2
    dest: "{{ munin_node_config_file }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify: restart munin-node

- name: Generate plugin configuration.
  template:
    src: plugin-conf.j2
    dest: "{{ munin_plugin_config_file }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify: restart munin-node

- name: Enable additional plugins.
  file:
    path: "{{ munin_plugin_dest_path }}{{ item.name }}"
    src: "{{ munin_plugin_src_path }}{{ item.plugin | default( item.name ) }}"
    state: link
  with_items: "{{ munin_node_plugins }}"
  notify: restart munin-node

- name: Ensure munin-node is started.
  service:
    name: munin-node
    state: started
    enabled: yes
  
- name: Make sure traffic can pass through firewall (RedHat)
  firewalld:
    port: "{{ munin_node_bind_port }}/tcp"
    permanent: true
    state: enabled
  when: ansible_os_family == 'RedHat'
  notify:
    - restart firewalld
    
- name: Make sure traffic can pass through firewall (Debian)
  ufw:
    rule: allow
    port: "{{ munin_node_bind_port }}"
    proto: tcp
  when: ansible_os_family == 'Debian'
  notify:
    - restart firewalld